{"version":3,"sources":["filter.js"],"names":[],"mappings":"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","file":"filter.js","sourcesContent":["import _ from 'lodash';\n/**\n * This class filters the input.\n * @class Filter\n */\nclass Filter {\n  constructor(input) {\n      this._input = input;\n      this._phrase = '';\n      this._arguments = [];\n      this._keywords = {};\n      this._templates = {};\n    }\n    /**\n     * Filters the input\n     * @param  {Object} input\n     * @return {Object}\n     */\n  filter(input = this._input) {\n    var phrase = input.phrase(),\n      args = input.arguments(),\n      values = input.values();\n    if (_.isPlainObject(phrase)) {\n      if (_.has(phrase, 'phrase')) this._phrase = phrase.phrase;\n      if (_.has(phrase, 'parser')) this._keywords.parser = phrase.parser;\n    } else this._phrase = phrase;\n\n    if (!_.isEmpty(args)) {\n      // Iterate the arguments\n      _.forEach(args, function(item) {\n        // If the arguments contains an Object\n        // then check for some keywords\n        if (_.isPlainObject(item)) {\n          _.forOwn(item, function(oitem, key) {\n            switch (key) {\n              case 'phrase':\n                if (!_.isEmpty(this._phrase)) this._phrase = item;\n                break;\n              case 'parser':\n                if (!this._keywords.parser) this._keywords.parser = oitem;\n                break;\n              case 'locale':\n                if (!this._keywords.locale) this._keywords.locale = oitem;\n                break;\n              default:\n                if (!this._templates[key]) this._templates[key] = oitem;\n                break;\n            }\n          }, this);\n        }\n        if (!_.isArray(item) && !_.isPlainObject(item))\n          this._arguments.push(item);\n      }, this);\n    }\n    if (!_.isEmpty(values)) {\n      _.forOwn(values, function(item, key) {\n        switch (key) {\n          case 'phrase':\n            if (!_.isEmpty(this._phrase)) this._phrase = item;\n            break;\n          case 'parser':\n            if (!this._keywords.parser) this._keywords.parser = item;\n            break;\n          case 'locale':\n            if (!this._keywords.locale) this._keywords.locale = item;\n            break;\n          default:\n            if (!this._templates[key]) this._templates[key] = item;\n            break;\n        }\n      }, this);\n    }\n    return {\n      phrase: this._phrase,\n      arguments: this._arguments,\n      template: this._templates,\n      keywords: this._keywords\n    };\n  }\n}\n\nexport default Filter;"],"sourceRoot":"/source/"}