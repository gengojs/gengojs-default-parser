{"version":3,"sources":["router.js"],"names":[],"mappings":";;;;;;;;;;;;oBAAiB,QAAQ;;;;qBACX,OAAO;;;;sBACP,QAAQ;;;;AACtB,IAAI,KAAK,GAAG,wBAAE,gBAAgB,CAAC,CAAC;;;IAE1B,MAAM;AACC,WADP,MAAM,CACE,KAAK,EAAE,IAAI,EAAE;0BADrB,MAAM;;AAER,SAAK,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;AAChC,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,QAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,QAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;;;AAG7B,QAAI,CAAC,OAAO,GAAG,oBAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAC5C,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAC7C,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;AAC3B,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9C,SAAK,CAAC,cAAc,EAAE,CAAE,CAAC,IAAI,CAAC,KAAK,AAAC,CAAC,CAAC;GACvC;;eAbG,MAAM;;WAcD,qBAAG;AACV,aAAO,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;KACjC;;;WACK,gBAAC,OAAO,EAAE;AACd,aAAO,IAAI,CAAC,SAAS,EAAE,IAAI,OAAO,GAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,SAAS,GAAI,IAAI,CAAC,KAAK,CAAC;KACnD;;;WACI,iBAAG;;AAEN,UAAI,IAAI,CAAC,SAAS,EAAE,EAAE;AACpB,aAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;;AAE3C,aAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC;AACjD,YAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,KAAK,CAAC,EACpC,OAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,IAAI,SAAS,CAAE,KACnD,OAAO,kBAAK,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;OACxD,MAAM,OAAO,SAAS,CAAC;KACzB;;;SA/BG,MAAM;;;qBAiCG,MAAM","file":"router.js","sourcesContent":["import Find from './find';\nimport d from 'debug';\nimport _ from 'lodash';\nvar debug = d('default-parser');\n/* Router class */\nclass Router {\n  constructor(input, core) {\n    debug('constructor:', 'Router');\n    this._router = core.router;\n    this._header = core.header;\n    this._backend = core.backend;\n    // Get the locale from either the keyword\n    // or header\n    this._locale = _.has(input.keywords, 'locale') ?\n      this._header.setLocale(input.keywords.locale) :\n      this._header.getLocale();\n    this._data = this._backend.find(this._locale);\n    debug('data exists:', !(!this._data));\n  }\n  isEnabled() {\n    return this._router.isEnabled();\n  }\n  global(keyword) {\n    return this.isEnabled() && keyword ?\n      (this._data[keyword] || undefined) : this._data;\n  }\n  local() {\n    //check if router is enabled\n    if (this.isEnabled()) {\n      debug('router enabled:', this.isEnabled());\n      //if dot depth is 0 else deep search for the data\n      debug('router.toArray()', this.router.toArray());\n      if (this.router.toArray().length === 0)\n        return (this._data[this.router.toDot()] || undefined);\n      else return Find.find(this._data, this.router.toDot());\n    } else return undefined;\n  }\n}\nexport default Router;"],"sourceRoot":"/source/"}